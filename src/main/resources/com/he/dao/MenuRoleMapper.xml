<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.he.dao.MenuRoleMapper" >

    <resultMap id="BaseResultMap" type="com.he.po.MenuRole" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
        <result column="menu_id" property="menuId" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, role_id, menu_id
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from menu_role
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from menu_role
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.he.po.MenuRole" >
        insert into menu_role (id, role_id, menu_id
            )
        values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{menuId,jdbcType=INTEGER}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.he.po.MenuRole" >
        insert into menu_role
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="roleId != null" >
                role_id,
            </if>
            <if test="menuId != null" >
                menu_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleId != null" >
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="menuId != null" >
                #{menuId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.he.po.MenuRole" >
        update menu_role
        <set >
            <if test="roleId != null" >
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="menuId != null" >
                menu_id = #{menuId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.he.po.MenuRole" >
        update menu_role
        set role_id = #{roleId,jdbcType=INTEGER},
            menu_id = #{menuId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    
   <!--  1.新增菜单角色关系以批量方式-->


   <insert id="insertListMenuRole" parameterType="java.util.List" >
	insert
	into menu_role(role_id, menu_id)
	values
	<foreach collection="list" item="item" index="index"
		separator=",">
 
		 ( #{item.roleId,jdbcType=INTEGER}, #{item.menuId,jdbcType=INTEGER})

          
		 
	</foreach>
</insert>
    
    
<!--    2.批量删除菜单角色关系-->
     
    <delete id="deleteListMenuRoleById" parameterType="java.util.List" >
    delete from menu_role where id in
    <foreach collection="list" item="item" open="(" close=")" separator=",">
      #{item.id,jdbcType=INTEGER}
    </foreach>
    </delete>

    
    
<!-- 3.批量修改菜单角色关系-->
    
	<update id="updateListMenuRole" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" open="" close="" separator=",">
       update menu_role
        set role_id = #{item.roleId,jdbcType=INTEGER},
            menu_id = #{item.menuId,jdbcType=INTEGER}
        where id = #{item.id,jdbcType=INTEGER}
    </foreach>         		
	</update> 
  
<!--    4.批量删除菜单角色关系 根据角色菜单-->
     
    <delete id="deleteListMenuRole" parameterType="com.he.po.MenuRole" >  
    delete from menu_role where  
    role_id=#{roleId,jdbcType=INTEGER} and menu_id = #{menuId,jdbcType=INTEGER} 
    </delete>
    
</mapper>