<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.he.dao.DormitoryRegistrationMapper" >

    <resultMap id="BaseResultMap" type="com.he.po.DormitoryRegistration" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="student_id" property="studentId" jdbcType="VARCHAR" />
        <result column="dormitory_id" property="dormitoryId" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, student_id, dormitory_id
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from dormitory_registration
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from dormitory_registration
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.he.po.DormitoryRegistration" >
        insert into dormitory_registration (id, student_id, dormitory_id
            )
        values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=VARCHAR}, #{dormitoryId,jdbcType=INTEGER}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.he.po.DormitoryRegistration" >
        insert into dormitory_registration
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="studentId != null" >
                student_id,
            </if>
            <if test="dormitoryId != null" >
                dormitory_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="studentId != null" >
                #{studentId,jdbcType=VARCHAR},
            </if>
            <if test="dormitoryId != null" >
                #{dormitoryId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.he.po.DormitoryRegistration" >
        update dormitory_registration
        <set >
            <if test="studentId != null" >
                student_id = #{studentId,jdbcType=VARCHAR},
            </if>
            <if test="dormitoryId != null" >
                dormitory_id = #{dormitoryId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.he.po.DormitoryRegistration" >
        update dormitory_registration
        set student_id = #{studentId,jdbcType=VARCHAR},
            dormitory_id = #{dormitoryId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    
<!--    //1.根据学生ID或者宿舍ID获取分配记录 -->
<!--   	List<DormitoryRegistration> getDormitoryRegistrationByDR(DormitoryRegistration dr);  -->
     <select id="getDormitoryRegistrationByDR" resultMap="BaseResultMap" parameterType="com.he.po.DormitoryRegistration" >
        select 
        <include refid="Base_Column_List" />
        from dormitory_registration
       <where>
       		<if test="studentId != null and studentId !=''" >
                student_id = #{studentId,jdbcType=VARCHAR}
            </if>
            <if test="dormitoryId != null and dormitoryId !=''" >
                dormitory_id = #{dormitoryId,jdbcType=INTEGER}
            </if>
       </where>
    </select>
    
    
<!--    //2.批量删除 -->
<!--   	int deleteDormitoryRegistrationByDormitoryId(List<Dormitory> ds);  -->
     <delete id="deleteDormitoryRegistrationByDormitoryId" parameterType="java.util.List" >
        delete from dormitory_registration 
        where dormitory_id in
         <foreach collection="list" item="item" index="index" open="(" close=")"
			separator=",">
			#{item.id,jdbcType=INTEGER}
		</foreach>
         
    </delete>
    
<!--     //  	3.批量插入 -->
<!--   	int insertDormitoryRegistrationList(List<DormitoryRegistration> dr); -->
  	<insert id="insertDormitoryRegistrationList" parameterType="java.util.List" >
        insert into 
        dormitory_registration (student_id, dormitory_id)
        values 
        <foreach collection="list" item="item" index="index" open="(" close=")"
			separator=",">
		#{item.studentId,jdbcType=VARCHAR}, #{item.dormitoryId,jdbcType=INTEGER}
		</foreach>
        
    </insert>
  	
  	
<!-- //	4.删除指定学生 -->
<!-- 	int deleteDormitoryRegistrationByStudentId(String studentId); -->
    <delete id="deleteDormitoryRegistrationByStudentId" parameterType="java.lang.String" >
        delete from dormitory_registration 
        <where>
        	student_id=#{studentId}
        </where>   
    </delete>
</mapper>