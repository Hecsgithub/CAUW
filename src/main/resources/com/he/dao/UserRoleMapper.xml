<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.he.dao.UserRoleMapper" >

    <resultMap id="BaseResultMap" type="com.he.po.UserRole" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, role_id, user_id
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from user_role
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from user_role
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.he.po.UserRole" >
        insert into user_role (id, role_id, user_id
            )
        values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.he.po.UserRole" >
        insert into user_role
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="roleId != null" >
                role_id,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleId != null" >
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.he.po.UserRole" >
        update user_role
        <set >
            <if test="roleId != null" >
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.he.po.UserRole" >
        update user_role
        set role_id = #{roleId,jdbcType=INTEGER},
            user_id = #{userId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    
<!--      1.新增用户角色关系以批量方式 -->

    
  <insert id="insertListUserRole" parameterType="java.util.List" >
	insert into 
	user_role (role_id , user_id)
	values
	<foreach collection="list" item="item" index="index"
			separator=",">
			(
		#{item.roleId,jdbcType=INTEGER},
		 #{item.userId,jdbcType=INTEGER} 
			)
		</foreach>
	</insert>
    
    
<!--     2.批量删除用户角色关系  根据表单id-->
     
    <delete id="deleteListUserRole" parameterType="java.util.List" >
    delete from user_role where id in
    <foreach collection="list" item="item" open="(" close=")" separator=",">
      #{item.id,jdbcType=INTEGER}
    </foreach>
    </delete>

    
    
<!--  3.批量修改删除用户角色关系 -->
    
	<update id="updateListUserRole" parameterType="java.util.List">
	
    <foreach collection="list" item="item" index="index" open="" close="" separator=",">
        update 
       user_role
         set role_id=#{item.roleId,jdbcType=INTEGER},	
         user_id= #{item.userId,jdbcType=INTEGER}
    	where
    	 id=#{item.id,jdbcType=INTEGER}
    </foreach>         		
	</update>
   
  <!--     4.批量删除用户角色关系  根据用户id-->
     
    <delete id="deleteListUserRoleByUserId" parameterType="java.util.List" >
    delete from user_role where user_id in
    (
    	select user_id from users where id in 
    	<foreach collection="list" item="item" open="(" close=")" separator=",">
      #{item.id,jdbcType=INTEGER}
       </foreach>
    )
    </delete> 
    
     <!--   5.批量删除用户角色关系  根据角色id-->
     
    <delete id="deleteListUserRoleByRoleId" parameterType="java.util.List" >
    delete from user_role where role_id in
    (
    	select role_id from role where id in 
    	<foreach collection="list" item="item" open="(" close=")" separator=",">
      #{item.id,jdbcType=INTEGER}
    </foreach>
    )
    </delete> 
    
<!--      //6.根据UserRole查询整个授权用户 -->
<!--     UserRole selectByUserRole(UserRole r); -->
    <select id="selectByUserRole" resultMap="BaseResultMap" parameterType="com.he.po.UserRole" >
        select 
        <include refid="Base_Column_List" />
        from user_role
        <where>
        	<if test="id != null " >
              id = #{id,jdbcType=INTEGER}
            </if>
        	<if test="roleId != null " >
              and  role_id = #{roleId,jdbcType=INTEGER}
            </if>
            <if test="userId != null " >
              and  user_id = #{userId,jdbcType=INTEGER}
            </if>
        </where>
  		limit 1
    </select>
    
    
    
</mapper>