<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.he.dao.MajorMapper" >

    <resultMap id="BaseResultMap" type="com.he.po.Major" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="major_id" property="majorId" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="VARCHAR" />
        <result column="department_id" property="departmentId" jdbcType="VARCHAR" />
    </resultMap>

   <resultMap id="BaseResultMapTree" type="com.he.po.Major" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="major_id" property="majorId" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="VARCHAR" />
        <result column="department_id" property="departmentId" jdbcType="VARCHAR" />
   		<collection property="children" ofType="com.he.po.Class">
           <id column="cid" property="id" jdbcType="INTEGER" />
        	<result column="cclass_id" property="classId" jdbcType="VARCHAR" />
        	<result column="cname" property="name" jdbcType="VARCHAR" />
        	<result column="cdirector" property="director" jdbcType="VARCHAR" />
        	<result column="cgrade" property="grade" jdbcType="VARCHAR" />
        	<result column="cmajor_id" property="majorId" jdbcType="VARCHAR" />
        </collection>
    </resultMap>


    <sql id="Base_Column_List" >
        id, major_id, name, price, department_id
    </sql>

<!-- 5/根据专业id获取专业 -->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" 
    parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from major
        where major_id = #{majorId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from major
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.he.po.Major" >
        insert into major (id, major_id, name, 
            price, department_id)
        values (#{id,jdbcType=INTEGER}, #{majorId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
            #{price,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.he.po.Major" >
        insert into major
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="majorId != null" >
                major_id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="price != null" >
                price,
            </if>
            <if test="departmentId != null" >
                department_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="majorId != null" >
                #{majorId,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                #{price,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null" >
                #{departmentId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.he.po.Major" >
        update major
        <set >
            <if test="majorId != null" >
                major_id = #{majorId,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                price = #{price,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null" >
                department_id = #{departmentId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.he.po.Major" >
        update major
        set major_id = #{majorId,jdbcType=VARCHAR},
            name = #{name,jdbcType=VARCHAR},
            price = #{price,jdbcType=VARCHAR},
            department_id = #{departmentId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    
<!--      1.根据专业名称，获取专业id -->
    <select id="selectMajorIDBuName" parameterType="java.lang.String" resultType="java.lang.String">
    	select major_id
    	from major
    	where name=#{name}
    	limit 1
    </select>
    
<!--      2.根据专业编号，获取id -->
    <select id="selectIDBuMajorID" parameterType="java.lang.String" resultType="java.lang.String">
    	select id
    	from major
    	where major_id=#{majorid}
    	limit 1
    </select>
    
<!--     3.获取所有数据-->	
    <select id="selectAllMajor" resultMap="BaseResultMap" parameterType="com.he.po.Major">
        select 
        <include refid="Base_Column_List" />
        from major
        <where>
        	<if test="id != null and  id !=''">
        	 and id = #{id,jdbcType=INTEGER}
        	</if>
        	<if test="majorId != null and  majorId !=''" >
              and  major_id = #{majorId,jdbcType=VARCHAR}
            </if>
            <if test="name != null and name !=''" >
              and  name = #{name,jdbcType=VARCHAR}
            </if>
            <if test="price != null and price !=''" >
              and  price = #{price,jdbcType=VARCHAR}
            </if>
            <if test="departmentId != null and departmentId !=''" >
              and  department_id = #{departmentId,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
   
 
<!--      *4.Tree获取所有信息 -->  
    <select id="selectAllTreeMajor" resultMap="BaseResultMapTree" parameterType="com.he.po.Major">
        select 
           major.*, 
           Class.id as cid, Class.class_id as cclass_id, Class.name as cname,
           Class.director as cdirector, Class.grade as cgrade,
            Class.major_id as cmajor_id
        from major,Class 
        <where>
        	major.major_id=Class.major_id
        	<if test="id != null and  id !=''">
        	 and major.id = #{id,jdbcType=INTEGER}
        	</if>
        	<if test="majorId != null and  majorId !=''" >
              and  major.major_id = #{majorId,jdbcType=VARCHAR}
            </if>
            <if test="name != null and name !=''" >
              and  major.name = #{name,jdbcType=VARCHAR}
            </if>
            <if test="price != null and price !=''" >
              and  major.price = #{price,jdbcType=VARCHAR}
            </if>
            <if test="departmentId != null and departmentId !=''" >
              and  major.department_id = #{departmentId,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    
    <!--     *5.Tree获取所有信息根据用户 -->  
    <select id="selectAllTreeMajorByUser" resultMap="BaseResultMapTree" parameterType="com.he.po.Users">
        select 
           major.*, 
           Class.id as cid, Class.class_id as cclass_id, Class.name as cname,
           Class.director as cdirector, Class.grade as cgrade,
            Class.major_id as cmajor_id
        from major,Class ,Users
        <where>
        	major.major_id=Class.major_id
        	and Class.director=Users.username
        	<if test="username != null and  username !=''" >
              and  Users.username = #{username,jdbcType=VARCHAR}
            </if>
           
        </where>
    </select>
    
</mapper>